/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.grant.view;

import com.grant.data.ItemDAO;
import com.grant.entity.ItemDetails;
import com.grant.entity.ReportICatogory;
import com.grant.entity.ReportRefCode;
import com.grant.util.DatePicker;
import java.io.IOException;
import java.sql.Date;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Isura Amarasinghe
 */
public class FormReports extends javax.swing.JFrame {

    /**
     * Creates new form FormItem
     */
    public FormReports() {
        initComponents();
        fillSubItems();
        fillSubRefCode();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jCBIemCatogory = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jBItemDateS = new javax.swing.JButton();
        jBItemDateE = new javax.swing.JButton();
        jBItmCatogaryR = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jCBRefCode = new javax.swing.JComboBox<>();
        jBRefDateS = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jBRefDateE = new javax.swing.JButton();
        jBRefReport = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jBStockInDateS = new javax.swing.JButton();
        jBStockInDateE = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jBStoInReport = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jBIStockOutDateS = new javax.swing.JButton();
        jBStockOutDateE = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jBStOutReport = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Item catogary");

        jCBIemCatogory.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBIemCatogoryItemStateChanged(evt);
            }
        });
        jCBIemCatogory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBIemCatogoryActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Item Catogary");

        jBItemDateS.setText("Start Date");
        jBItemDateS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBItemDateSActionPerformed(evt);
            }
        });

        jBItemDateE.setText("End Date");
        jBItemDateE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBItemDateEActionPerformed(evt);
            }
        });

        jBItmCatogaryR.setText("Genarate Report");
        jBItmCatogaryR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBItmCatogaryRActionPerformed(evt);
            }
        });

        jLabel3.setText("to");

        jLabel4.setText("Ref Code");

        jCBRefCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBRefCodeActionPerformed(evt);
            }
        });

        jBRefDateS.setText("Start Date");
        jBRefDateS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRefDateSActionPerformed(evt);
            }
        });

        jLabel5.setText("to");

        jBRefDateE.setText("End Date");
        jBRefDateE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRefDateEActionPerformed(evt);
            }
        });

        jBRefReport.setText("Genarate Report");
        jBRefReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRefReportActionPerformed(evt);
            }
        });

        jLabel6.setText("Stock In");

        jBStockInDateS.setText("Start Date");
        jBStockInDateS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBStockInDateSActionPerformed(evt);
            }
        });

        jBStockInDateE.setText("End Date");
        jBStockInDateE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBStockInDateEActionPerformed(evt);
            }
        });

        jLabel7.setText("to");

        jBStoInReport.setText("Genarate Report");
        jBStoInReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBStoInReportActionPerformed(evt);
            }
        });

        jLabel8.setText("Stock Out");

        jBIStockOutDateS.setText("Start Date");
        jBIStockOutDateS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBIStockOutDateSActionPerformed(evt);
            }
        });

        jBStockOutDateE.setText("End Date");
        jBStockOutDateE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBStockOutDateEActionPerformed(evt);
            }
        });

        jLabel9.setText("to");

        jBStOutReport.setText("Genarate Report");
        jBStOutReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBStOutReportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jLabel2)
                .addContainerGap(519, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jCBIemCatogory, 0, 222, Short.MAX_VALUE)
                            .addComponent(jCBRefCode, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jBItemDateS)
                                    .addGap(11, 11, 11)
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jBItemDateE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jBIStockOutDateS, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel9)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jBStockOutDateE, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jBRefDateS, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBRefDateE, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBStockInDateS, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBStockInDateE, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jBStoInReport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBItmCatogaryR, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                    .addComponent(jBRefReport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBStOutReport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCBIemCatogory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBItemDateS)
                    .addComponent(jBItemDateE)
                    .addComponent(jBItmCatogaryR)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBRefCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jBRefDateS)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBRefDateE)
                    .addComponent(jBRefReport))
                .addGap(55, 55, 55)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBStockInDateS)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBStockInDateE)
                    .addComponent(jBStoInReport)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jBIStockOutDateS)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBStockOutDateE)
                    .addComponent(jBStOutReport))
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 97, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCBIemCatogoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBIemCatogoryActionPerformed

    }//GEN-LAST:event_jCBIemCatogoryActionPerformed

    private void jCBIemCatogoryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBIemCatogoryItemStateChanged

    }//GEN-LAST:event_jCBIemCatogoryItemStateChanged

    private void jBItemDateSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBItemDateSActionPerformed
        DatePicker datePicker = new DatePicker(this);
        jBItemDateS.setText(datePicker.setPickedDate());
    }//GEN-LAST:event_jBItemDateSActionPerformed

    private void jBItemDateEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBItemDateEActionPerformed
        DatePicker datePicker = new DatePicker(this);
        jBItemDateE.setText(datePicker.setPickedDate());

    }//GEN-LAST:event_jBItemDateEActionPerformed

    private void jBItmCatogaryRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBItmCatogaryRActionPerformed

        try {
            String itemName = jCBIemCatogory.getSelectedItem().toString();
            String itemIDateStart = jBItemDateS.getText();
            String itemInDateEnd = jBItemDateE.getText();

            DateFormat format = new SimpleDateFormat("yyyy-MM-dd");

            java.util.Date parsedS = format.parse(itemIDateStart);
            java.sql.Date iDateStart = new java.sql.Date(parsedS.getTime());

            java.util.Date parsedE = format.parse(itemInDateEnd);
            java.sql.Date iDateEnd = new java.sql.Date(parsedE.getTime());

            ReportICatogory ric = new ReportICatogory(itemName, iDateStart, iDateEnd);

            ItemDAO dAO = new ItemDAO();
            dAO.getItemCatogaryReport(ric);

        } catch (ParseException ex) {
            Logger.getLogger(FormReports.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FormReports.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jBItmCatogaryRActionPerformed

    private void jBRefDateSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRefDateSActionPerformed
        DatePicker datePicker = new DatePicker(this);
        jBIStockOutDateS.setText(datePicker.setPickedDate());
    }//GEN-LAST:event_jBRefDateSActionPerformed

    private void jBStockInDateSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBStockInDateSActionPerformed
        DatePicker datePicker = new DatePicker(this);
        if (datePicker.setPickedDate().toString().isEmpty()) {
            jBStockInDateS.setText("Select a date");
        } else {
            jBStockInDateS.setText(datePicker.setPickedDate());
        }
    }//GEN-LAST:event_jBStockInDateSActionPerformed

    private void jBRefDateEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRefDateEActionPerformed
        DatePicker datePicker = new DatePicker(this);
        jBRefDateE.setText(datePicker.setPickedDate());
    }//GEN-LAST:event_jBRefDateEActionPerformed

    private void jCBRefCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBRefCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBRefCodeActionPerformed

    private void jBRefReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRefReportActionPerformed
        try {
            String refCode = jCBRefCode.getSelectedItem().toString();
            String refDateStart = jBRefDateS.getText();
            String refDateEnd = jBRefDateE.getText();

            DateFormat format = new SimpleDateFormat("yyyy-MM-dd");

            java.util.Date parsedS = format.parse(refDateStart);
            java.sql.Date iDateStart = new java.sql.Date(parsedS.getTime());

            java.util.Date parsedE = format.parse(refDateEnd);
            java.sql.Date iDateEnd = new java.sql.Date(parsedE.getTime());

            ReportRefCode rrc = new ReportRefCode(refCode, iDateStart, iDateEnd);

            ItemDAO dAO = new ItemDAO();
            try {
                dAO.getRefPerfReport(rrc);
            } catch (IOException ex) {
                Logger.getLogger(FormReports.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (ParseException ex) {
            Logger.getLogger(FormReports.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBRefReportActionPerformed

    private void jBStOutReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBStOutReportActionPerformed

        try {
            // String itemName = jComboBox3.getSelectedItem().toString();
            String itemIDateStart = jBIStockOutDateS.getText();
            String itemInDateEnd = jBStockOutDateE.getText();

            DateFormat format = new SimpleDateFormat("yyyy-MM-dd");

            java.util.Date parsedS = format.parse(itemIDateStart);
            java.sql.Date iDateStart = new java.sql.Date(parsedS.getTime());

            java.util.Date parsedE = format.parse(itemInDateEnd);
            java.sql.Date iDateEnd = new java.sql.Date(parsedE.getTime());

            ReportICatogory ric = new ReportICatogory(iDateStart, iDateEnd);

            ItemDAO dAO = new ItemDAO();
            boolean re = dAO.getStockOutReport(ric);
            if (re == false) {
                JOptionPane.showMessageDialog(null, "Please retry with correct date range");
            } else {
                JOptionPane.showMessageDialog(null, "File Genarated");
            }

        } catch (ParseException ex) {
            Logger.getLogger(FormReports.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FormReports.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBStOutReportActionPerformed

    private void jBIStockOutDateSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBIStockOutDateSActionPerformed
        DatePicker datePicker = new DatePicker(this);
        if (datePicker.setPickedDate().toString().isEmpty()) {
            jBIStockOutDateS.setText("Select a date");
        } else {
            jBIStockOutDateS.setText(datePicker.setPickedDate());
        }
    }//GEN-LAST:event_jBIStockOutDateSActionPerformed

    private void jBStockOutDateEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBStockOutDateEActionPerformed
        DatePicker datePicker = new DatePicker(this);
        if (datePicker.setPickedDate().toString().isEmpty()) {
            jBIStockOutDateS.setText("Select a date");
        } else {
            jBStockOutDateE.setText(datePicker.setPickedDate());
        }

    }//GEN-LAST:event_jBStockOutDateEActionPerformed

    private void jBStoInReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBStoInReportActionPerformed
        try {
            // String itemName = jComboBox3.getSelectedItem().toString();
            String itemIDateStart = jBStockInDateS.getText();
            String itemInDateEnd = jBStockInDateE.getText();

            DateFormat format = new SimpleDateFormat("yyyy-MM-dd");

            java.util.Date parsedS = format.parse(itemIDateStart);
            java.sql.Date iDateStart = new java.sql.Date(parsedS.getTime());

            java.util.Date parsedE = format.parse(itemInDateEnd);
            java.sql.Date iDateEnd = new java.sql.Date(parsedE.getTime());

            ReportICatogory ric = new ReportICatogory(iDateStart, iDateEnd);

            ItemDAO dAO = new ItemDAO();
            boolean re = dAO.getStockINReport(ric);

            if (re == false) {
                JOptionPane.showMessageDialog(null, "Please retry with correct date range");
            } else {
                JOptionPane.showMessageDialog(null, "File Genarated");
            }

        } catch (ParseException ex) {
            Logger.getLogger(FormReports.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FormReports.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBStoInReportActionPerformed

    private void jBStockInDateEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBStockInDateEActionPerformed
        DatePicker datePicker = new DatePicker(this);
        if (datePicker.setPickedDate().toString().isEmpty()) {
            jBStockInDateE.setText("Select a date");
        } else {
            jBStockInDateE.setText(datePicker.setPickedDate());
        }
    }//GEN-LAST:event_jBStockInDateEActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormReports.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormReports.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormReports.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormReports.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>''
        //</editor-fold>''
        //</editor-fold>''
        //</editor-fold>''

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormReports().setVisible(true);

            }
        });
    }

    private void fillSubItems() {

        jCBIemCatogory.removeAllItems();

        ItemDAO itemDAO = new ItemDAO();
        ArrayList jobCatList = itemDAO.getSubItems();
        Iterator i = jobCatList.iterator();
        while (i.hasNext()) {
            jCBIemCatogory.addItem((String) i.next());
        }
        String jobCatName = jCBIemCatogory.getSelectedItem().toString();

    }

    private void fillSubRefCode() {

        jCBRefCode.removeAllItems();

        ItemDAO itemDAO = new ItemDAO();
        ArrayList jobRefList = itemDAO.getSubRefCode();
        Iterator i = jobRefList.iterator();
        while (i.hasNext()) {
            jCBRefCode.addItem((String) i.next());
        }
        String jobRef = jCBRefCode.getSelectedItem().toString();

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBIStockOutDateS;
    private javax.swing.JButton jBItemDateE;
    private javax.swing.JButton jBItemDateS;
    private javax.swing.JButton jBItmCatogaryR;
    private javax.swing.JButton jBRefDateE;
    private javax.swing.JButton jBRefDateS;
    private javax.swing.JButton jBRefReport;
    private javax.swing.JButton jBStOutReport;
    private javax.swing.JButton jBStoInReport;
    private javax.swing.JButton jBStockInDateE;
    private javax.swing.JButton jBStockInDateS;
    private javax.swing.JButton jBStockOutDateE;
    private javax.swing.JComboBox<String> jCBIemCatogory;
    private javax.swing.JComboBox<String> jCBRefCode;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
